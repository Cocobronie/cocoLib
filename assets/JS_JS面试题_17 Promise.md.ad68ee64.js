import{_ as s,o as a,c as e,O as o}from"./chunks/framework.23072b34.js";const d=JSON.parse('{"title":"Promise","description":"","frontmatter":{},"headers":[],"relativePath":"JS/JS面试题/17 Promise.md","filePath":"JS/JS面试题/17 Promise.md","lastUpdated":null}'),l={name:"JS/JS面试题/17 Promise.md"},n=o(`<h1 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-label="Permalink to &quot;Promise&quot;">​</a></h1><h2 id="promise-resolve等价于下面的写法" tabindex="-1">Promise.resolve等价于下面的写法 <a class="header-anchor" href="#promise-resolve等价于下面的写法" aria-label="Permalink to &quot;Promise.resolve等价于下面的写法&quot;">​</a></h2><p>有时需要将现有对象转为 Promise 对象，Promise.resolve方法就起到这个作用。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 等价于</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">resolve</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span></code></pre></div>`,4),t=[n];function r(p,c,i,m,_,y){return a(),e("div",null,t)}const A=s(l,[["render",r]]);export{d as __pageData,A as default};
