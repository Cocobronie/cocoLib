import{_ as s,o as a,c as n,O as l}from"./chunks/framework.23072b34.js";const o="/cocoLib/assets/1fe57a274d8644bfacf44526e79d57bc.7133a5b1.png",d=JSON.parse('{"title":"虚拟DOM和 diff 算法","description":"","frontmatter":{},"headers":[],"relativePath":"vue3/04 虚拟DOM和 diff 算法.md","filePath":"vue3/04 虚拟DOM和 diff 算法.md","lastUpdated":null}'),p={name:"vue3/04 虚拟DOM和 diff 算法.md"},e=l(`<h1 id="虚拟dom和-diff-算法" tabindex="-1">虚拟DOM和 diff 算法 <a class="header-anchor" href="#虚拟dom和-diff-算法" aria-label="Permalink to &quot;虚拟DOM和 diff 算法&quot;">​</a></h1><h2 id="ast简介" tabindex="-1"><strong>AST简介</strong> <a class="header-anchor" href="#ast简介" aria-label="Permalink to &quot;**AST简介**&quot;">​</a></h2><p><strong>抽象语法树（Abstract Syntax Tree，AST）</strong>，或简称语法树（Syntax tree），是源代码语法架构的一种抽象表示。它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源代码中的一种结构。</p><p><a href="https://zhuanlan.zhihu.com/p/367990285" target="_blank" rel="noreferrer">学习抽象语法树 AST - 知乎 (zhihu.com)</a></p><h2 id="什么是虚拟dom" tabindex="-1"><strong>什么是虚拟DOM</strong> <a class="header-anchor" href="#什么是虚拟dom" aria-label="Permalink to &quot;**什么是虚拟DOM**&quot;">​</a></h2><p><a href="https://juejin.cn/post/7207250137466781751" target="_blank" rel="noreferrer">什么是虚拟DOM - 掘金 (juejin.cn)</a></p><p>虚拟 DOM（Virtual DOM）是一种轻量级的 JavaScript 对象，它描述了真实 DOM 中的节点信息和属性。虚拟 DOM 可以在<strong>内存</strong>中进行操作，然后通过算法比较新旧虚拟 DOM 的差异，最终<strong>只对发生变化的部分进行 DOM 操作</strong>，从而提高了性能。</p><p>虚拟 DOM 的实现源码在 Vue.js 的核心代码中，具体实现位于 <code>src/core/vdom</code> 目录下。</p><p>其中，<code>VNode</code> 类定义了虚拟 DOM 的基本结构，每个 <code>VNode</code> 对象表示一个真实 DOM 节点的信息，包括节点类型、属性、子节点等。<code>createElm</code> 函数用于创建真实 DOM 节点，并将其插入到父节点中。<code>patch</code> 函数是虚拟 DOM 的核心算法，它比较新旧两个 <code>VNode</code> 对象的差异，生成一个补丁（Patch），并将这个补丁应用到真实 DOM 中。</p><p>下面是一个简化版的 <code>VNode</code> 类和 <code>patch</code> 函数的示例代码：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// VNode 类定义虚拟 DOM 的结构</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">VNode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">children</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tag</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">children</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// patch 函数比较新旧 VNode 对象的差异，并生成补丁</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">patch</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">newVNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 新旧 VNode 对象相同，无需更新</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">​</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">tag</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">// 新旧 VNode 对象的标签不同，直接替换</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">replaceNode</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">// 新旧 VNode 对象的文本内容不同，更新文本</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">updateText</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">// 新旧 VNode 对象的标签相同，比较属性和子节点</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">updateAttrs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">updateChildren</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newVNode</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 示例用的辅助函数</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">replaceNode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">newVNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*...*/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">updateText</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">newVNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*...*/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">updateAttrs</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">newVNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*...*/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">updateChildren</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">oldVNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">newVNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*...*/</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p><a href="https://juejin.cn/post/7207250137466781751" target="_blank" rel="noreferrer">什么是虚拟DOM - 掘金 (juejin.cn)</a></p><h2 id="没有key的diff算法和有key的diff算法" tabindex="-1"><strong>没有Key的Diff算法和有key的Diff算法</strong> <a class="header-anchor" href="#没有key的diff算法和有key的diff算法" aria-label="Permalink to &quot;**没有Key的Diff算法和有key的Diff算法**&quot;">​</a></h2><img src="`+o+'" alt="img" style="zoom:80%;">',14),t=[e];function c(r,y,D,F,i,A){return a(),n("div",null,t)}const f=s(p,[["render",c]]);export{d as __pageData,f as default};
