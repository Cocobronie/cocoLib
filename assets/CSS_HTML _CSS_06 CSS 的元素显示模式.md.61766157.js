import{_ as t,o,c as a,O as s}from"./chunks/framework.23072b34.js";const e="/cocoLib/images/image-20230623211116037.png",C=JSON.parse('{"title":"CSS 的元素显示模式","description":"","frontmatter":{},"headers":[],"relativePath":"CSS/HTML +CSS/06 CSS 的元素显示模式.md","filePath":"CSS/HTML +CSS/06 CSS 的元素显示模式.md","lastUpdated":null}'),l={name:"CSS/HTML +CSS/06 CSS 的元素显示模式.md"},n=s('<h1 id="css-的元素显示模式" tabindex="-1">CSS 的元素显示模式 <a class="header-anchor" href="#css-的元素显示模式" aria-label="Permalink to &quot;CSS 的元素显示模式&quot;">​</a></h1><img src="'+e+`" alt="image-20230623211116037" style="zoom:67%;"><h2 id="块元素" tabindex="-1">块元素 <a class="header-anchor" href="#块元素" aria-label="Permalink to &quot;块元素&quot;">​</a></h2><p>常见的块元素有<code>&lt;h1&gt;-&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code>标签是最典型的块元素。</p><p><strong>块级元素的特点：</strong></p><p>① 比较霸道，自己独占一行。</p><p>② 高度，宽度、外边距以及内边距都可以控制。</p><p>③ <strong>宽度默认是容器（父级宽度）的100%</strong>。</p><p>④ 是一个容器及盒子，里面可以放<strong>行内</strong>或者<strong>块级</strong>元素。</p><p><strong>注意：</strong></p><ul><li>文字类的元素内不能使用<strong>块级元素</strong></li><li><code>&lt;p&gt;</code>标签主要用于存放文字，因此 里面不能放块级元素，特别是不能放<code>&lt;div&gt;</code></li><li>同理， <code>&lt;h1&gt;-&lt;h6&gt;</code>等都是文字类块级标签，里面也不能放其他块级元素</li></ul><h2 id="行内元素" tabindex="-1">行内元素 <a class="header-anchor" href="#行内元素" aria-label="Permalink to &quot;行内元素&quot;">​</a></h2><p>常见的行内元素有<code>&lt;a&gt;、&lt;span&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;span&gt;</code>等，其中<code>&lt;span&gt;</code> 标签是最典型的行内元素。有的地方也将行内元素称为内联元素。</p><p><strong>行内元素的特点：</strong></p><p>① 相邻行内元素在一行上，一行可以显示多个。</p><p>② <strong>高、宽直接设置是无效的</strong>。</p><p>③ 默认宽度就是它本身<strong>内容的宽度</strong>。</p><p>④ 行内元素只能容纳<strong>文本</strong>或其他<strong>行内元素</strong>。</p><p><strong>注意：</strong></p><ul><li><code>&lt;a&gt;</code>链接里面不能再放链接</li><li>特殊情况<code>&lt;a&gt;</code>链接里面可以放<strong>块级元素</strong>，但是给 <code>&lt;a&gt;</code>转换一下块级模式最安全</li></ul><h2 id="行内块元素" tabindex="-1">行内块元素 <a class="header-anchor" href="#行内块元素" aria-label="Permalink to &quot;行内块元素&quot;">​</a></h2><p>在行内元素中有几个特殊的标签 <code>&lt;img/&gt;</code>、<code>&lt;input/&gt;</code>、<code>&lt;td&gt;</code>，它们同时具有块元素和行内元素的特点。 有些资料称它们为行内块元素。</p><p><strong>行内块元素的特点：</strong></p><p>① 和相邻行内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）。</p><p>② 默认宽度就是它本身内容的宽度（行内元素特点）。</p><p>③ 高度，行高、外边距以及内边距都可以控制（块级元素特点)。</p><h2 id="元素显示模式转换" tabindex="-1">元素显示模式转换 <a class="header-anchor" href="#元素显示模式转换" aria-label="Permalink to &quot;元素显示模式转换&quot;">​</a></h2><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">转换为块元素：display:block;</span></span>
<span class="line"><span style="color:#A6ACCD;">转换为行内元素：display:inline;</span></span>
<span class="line"><span style="color:#A6ACCD;">转换为行内块：display: </span><span style="color:#FFCB6B;">inline-block</span><span style="color:#A6ACCD;">;</span></span></code></pre></div>`,28),p=[n];function r(c,i,d,g,_,h){return o(),a("div",null,p)}const u=t(l,[["render",r]]);export{C as __pageData,u as default};
