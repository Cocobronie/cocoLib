import{_ as e,o,c as t,O as c}from"./chunks/framework.23072b34.js";const C=JSON.parse('{"title":"深入理解BFC","description":"","frontmatter":{},"headers":[],"relativePath":"CSS/CSS面试题/05 深入理解BFC.md","filePath":"CSS/CSS面试题/05 深入理解BFC.md","lastUpdated":null}'),l={name:"CSS/CSS面试题/05 深入理解BFC.md"},a=c('<h1 id="深入理解bfc" tabindex="-1">深入理解BFC <a class="header-anchor" href="#深入理解bfc" aria-label="Permalink to &quot;深入理解BFC&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">参考</p><p><a href="https://juejin.cn/post/6844903693028966414" target="_blank" rel="noreferrer">深入理解BFC - 掘金 (juejin.cn)</a><a href="https://juejin.cn/post/7046169975706353701" target="_blank" rel="noreferrer">https://juejin.cn/post/7046169975706353701</a>)</p></div><ol><li>什么是BFC?</li><li>如何创建BFC？</li><li></li></ol><h2 id="_1、什么是bfc" tabindex="-1">1、什么是BFC <a class="header-anchor" href="#_1、什么是bfc" aria-label="Permalink to &quot;1、什么是BFC&quot;">​</a></h2><p><code>Formatting context </code>是 <strong>W3C CSS2.1 规范</strong>中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 <code>Formatting context</code> 有 <code>Block fomatting context</code> (简称BFC)和 <code>Inline formatting context </code>(简称IFC)。<strong>Block formatting context直译为&quot;块级格式化上下文&quot;。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干</strong>。<strong>通俗地讲，BFC是一个容器，用于管理块级元素。</strong></p><h2 id="_2、如何创建bfc" tabindex="-1">2、如何创建BFC <a class="header-anchor" href="#_2、如何创建bfc" aria-label="Permalink to &quot;2、如何创建BFC&quot;">​</a></h2><ul><li><p><code>float</code>为 <code>left|right</code></p></li><li><p><code>overflow</code>为 <code>hidden|auto|scroll</code></p></li><li><p><code>display</code>为<code> table-cell|table-caption|inline-block|inline-flex|flex</code></p></li><li><p><code>position</code>为 <code>absolute|fixed</code></p></li><li><p>根元素</p></li></ul><h2 id="_3、bfc布局规则" tabindex="-1">3、BFC布局规则 <a class="header-anchor" href="#_3、bfc布局规则" aria-label="Permalink to &quot;3、BFC布局规则&quot;">​</a></h2><ul><li>内部的<code>Box</code>会在垂直方向，一个接一个地放置(即块级元素独占一行)。</li><li><code>BFC</code>的区域不会与<code>float box</code>重叠(<strong>利用这点可以实现自适应两栏布局</strong>)。</li><li>内部的<code>Box</code>垂直方向的距离由<code>margin</code>决定。属于同一个<code>BFC</code>的两个相邻<code>Box</code>的<code>margin</code>会发生重叠(<strong><code>margin</code>重叠三个条件:同属于一个BFC;相邻;块级元素</strong>)。</li><li>计算BFC的高度时，浮动元素也参与计算。（清除浮动<code> haslayout</code>）</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li></ul>',9),i=[a];function d(n,r,s,_,p,f){return o(),t("div",null,i)}const B=e(l,[["render",d]]);export{C as __pageData,B as default};
