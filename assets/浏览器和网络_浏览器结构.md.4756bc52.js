import{_ as a,o as t,c as e,O as r}from"./chunks/framework.23072b34.js";const n="/cocoLib/images/webp.webp",u=JSON.parse('{"title":"浏览器的主要结构","description":"","frontmatter":{},"headers":[],"relativePath":"浏览器和网络/浏览器结构.md","filePath":"浏览器和网络/浏览器结构.md","lastUpdated":null}'),i={name:"浏览器和网络/浏览器结构.md"},o=r('<h1 id="浏览器的主要结构" tabindex="-1">浏览器的主要结构 <a class="header-anchor" href="#浏览器的主要结构" aria-label="Permalink to &quot;浏览器的主要结构&quot;">​</a></h1><p><a href="https://www.jianshu.com/p/f5141d52c3f0" target="_blank" rel="noreferrer">「一」浏览器的主要结构【必看!】 - 简书 (jianshu.com)</a></p><ol><li><strong>浏览器主要结构有哪些</strong></li><li><strong>什么是浏览器内核</strong></li></ol><h2 id="_1-浏览器主要结构有哪些" tabindex="-1">1. 浏览器主要结构有哪些 <a class="header-anchor" href="#_1-浏览器主要结构有哪些" aria-label="Permalink to &quot;1. 浏览器主要结构有哪些&quot;">​</a></h2><p><img src="'+n+'" alt="img"></p><h6 id="_1-用户界面-user-interface" tabindex="-1">1. 用户界面（User Interface） <a class="header-anchor" href="#_1-用户界面-user-interface" aria-label="Permalink to &quot;1. 用户界面（User Interface）&quot;">​</a></h6><p>包括地址栏、后退/前进按钮、书签目录等，也就是看到的除了显示所请求页面的主窗口之外的其他部分</p><h6 id="_2-浏览器引擎-browser-engine" tabindex="-1">2. 浏览器引擎（Browser Engine） <a class="header-anchor" href="#_2-浏览器引擎-browser-engine" aria-label="Permalink to &quot;2. 浏览器引擎（Browser Engine）&quot;">​</a></h6><p>用来查询及操作渲染引擎的接口 浏览器引擎可以加载一个给定的URI，并支持诸如：前进/后退/重新加载等浏览操作。 浏览器引擎提供查看浏览会话的各个方面的挂钩，例如：当前页面加载进度、JavaScript alert。 浏览器引擎还允许查询/修改渲染引擎设置。</p><h6 id="_3-渲染引擎-rendering-engine" tabindex="-1">3. 渲染引擎 （Rendering Engine） <a class="header-anchor" href="#_3-渲染引擎-rendering-engine" aria-label="Permalink to &quot;3. 渲染引擎 （Rendering Engine）&quot;">​</a></h6><p>渲染引擎能够显示HTML和XML文档，可选择CSS样式，以及嵌入式内容（如图片）。 渲染引擎能够准确计算页面布局，可使用“回流”算法逐步调整页面元素的位置。 渲染引擎内部包含HTML解析器。</p><h6 id="_4-网络-networking" tabindex="-1">4. 网络（Networking） <a class="header-anchor" href="#_4-网络-networking" aria-label="Permalink to &quot;4. 网络（Networking）&quot;">​</a></h6><p>网络系统实现HTTP和FTP等文件传输协议。 网络系统可以在不同的字符集之间进行转换，为文件解析MIME媒体类型。 网络系统可以实现最近检索资源的缓存功能</p><h6 id="_5-xml解析器-xml-parser" tabindex="-1">5.XML解析器（XML Parser） <a class="header-anchor" href="#_5-xml解析器-xml-parser" aria-label="Permalink to &quot;5.XML解析器（XML Parser）&quot;">​</a></h6><p>XML解析器可以将XML文档解析成<strong>文档对象模型（Document Object Model，DOM）树</strong>。 XML解析器是浏览器架构中复用最多的子系统之一，几乎所有的浏览器实现都利用现有的XML解析器，而不是从头开始创建自己的XML解析器。</p><h6 id="_6-js解释器-javascript-interpreter" tabindex="-1">6. JS解释器（JavaScript Interpreter） <a class="header-anchor" href="#_6-js解释器-javascript-interpreter" aria-label="Permalink to &quot;6. JS解释器（JavaScript Interpreter）&quot;">​</a></h6><p>JavaScript解释器能够解释并执行嵌入在网页中的JavaScript（又称ECMAScript）代码。</p><h6 id="_7-显示后端-display-backend" tabindex="-1">7.显示后端 （Display Backend） <a class="header-anchor" href="#_7-显示后端-display-backend" aria-label="Permalink to &quot;7.显示后端 （Display Backend）&quot;">​</a></h6><p>用来绘制类似组合选择框及对话框等基本组件，具有不特定于某个平台的通用接口，底层使用操作系统的用户接口。</p><h6 id="_8-数据持久层-data-persistence" tabindex="-1">8. 数据持久层 （Data Persistence） <a class="header-anchor" href="#_8-数据持久层-data-persistence" aria-label="Permalink to &quot;8. 数据持久层 （Data Persistence）&quot;">​</a></h6><p>数据持久层将与浏览会话相关联的各种数据存储在硬盘上。 这些数据可能是诸如：书签、工具栏设置等这样的<strong>高级数据</strong>，也可能是诸如：Cookie，安全证书、缓存等这样的<strong>低级数据</strong>。</p><h2 id="_2-内核" tabindex="-1">2. 内核 <a class="header-anchor" href="#_2-内核" aria-label="Permalink to &quot;2. 内核&quot;">​</a></h2><h6 id="浏览器内核分成两部分-渲染引擎和js引擎-由于js引擎越来越独立-内核就倾向于只指渲染引擎-负责请求网络页面资源加以解析排版并呈现给用户" tabindex="-1">浏览器内核分成两部分：渲染引擎和js引擎，由于js引擎越来越独立，内核就倾向于只指渲染引擎，负责请求网络页面资源加以解析排版并呈现给用户 <a class="header-anchor" href="#浏览器内核分成两部分-渲染引擎和js引擎-由于js引擎越来越独立-内核就倾向于只指渲染引擎-负责请求网络页面资源加以解析排版并呈现给用户" aria-label="Permalink to &quot;浏览器内核分成两部分：渲染引擎和js引擎，由于js引擎越来越独立，内核就倾向于只指渲染引擎，负责请求网络页面资源加以解析排版并呈现给用户&quot;">​</a></h6><p>默认情况下，渲染引擎可以显示html、xml文档及图片，它也可以借助插件显示其他类型数据，例如使用PDF阅读器插件，可以显示PDF格式</p><h6 id="【渲染引擎】" tabindex="-1">【渲染引擎】 <a class="header-anchor" href="#【渲染引擎】" aria-label="Permalink to &quot;【渲染引擎】&quot;">​</a></h6><table><thead><tr><th>浏览器</th><th>渲染引擎</th></tr></thead><tbody><tr><td>firefox</td><td>gecko</td></tr><tr><td>IE、Edge</td><td>Trident</td></tr><tr><td>chrome\\safari\\opera</td><td>webkit（13年chrome和opera开始使用Blink引擎）</td></tr><tr><td>QQ浏览器和微信内核</td><td>X5（16年开始使用Blink引擎）</td></tr><tr><td>UC</td><td>U3引擎</td></tr></tbody></table><h6 id="【js引擎】" tabindex="-1">【js引擎】 <a class="header-anchor" href="#【js引擎】" aria-label="Permalink to &quot;【js引擎】&quot;">​</a></h6><table><thead><tr><th>浏览器</th><th>js引擎</th></tr></thead><tbody><tr><td>chrome</td><td><strong>V8引擎</strong></td></tr><tr><td>firefox</td><td>monkey系列</td></tr><tr><td>Opera</td><td>Carakan引擎</td></tr><tr><td>safari</td><td>SquirrelFish系列引擎</td></tr><tr><td>老版本IE</td><td>Jscript引擎 （IE9之后使用Chakra引擎）</td></tr></tbody></table>',28),d=[o];function s(h,l,c,p,_,b){return t(),e("div",null,d)}const f=a(i,[["render",s]]);export{u as __pageData,f as default};
